==============
微分方程数值解
==============

迭代格式
========

一阶微分方程初值问题：

.. math::
  \left\{
  \begin{aligned}
  \frac{\mathrm d u}{\mathrm d t}&=f(t,u),t\in(0,T]\\
  u(0) &= u_0
  \end{aligned}
  \right.

在满足连续条件和有界条件时有唯一解。

.. note::
  有界条件，即 Lipschiz 条件：存在正常数 L，使得

  .. math::
    |f(t,u_1)-f(t,u_2)|\le L|u_1-u_2|,\quad \forall t\in(0,T]

绝对稳定性
----------

考虑模型方程

.. math::
  \left\{\begin{aligned}
  \frac{\mathrm d u}{\mathrm d t}&=\lambda u,\ \lambda\in\mathbb{C}\\
  u(0)&=u^0
  \end{aligned}\right.

分为三步：

1. 数值解的理论值 :math:`u^{m+1}=g(\tau,\lambda)u^m`
2. 数值解的实际计算值 :math:`\tilde u^{m+1}=g(\tau,\lambda)\tilde u^m`
3. 数值解的误差方程 :math:`\epsilon^{m+1}=g(\tau,\lambda)\epsilon^m`
4. 则 :math:`|g(\tau,\lambda)|\le1` 时绝对稳定

局部截断误差
------------

设 :math:`\hat u^{m+1}` 是用精确解 :math:`u(t_m)` 代替数值解 :math:`u^m` 后按某格式计算一步得到的数值解，则该格式的局部截断误差为 :math:`T^{m+1}=u(t_{m+1})-\hat u^{m+1}` 。

求法是结合Taylor展开、原方程，将 :math:`\hat u^{m+1}` 用 :math:`u(t_{m+1})` 和 :math:`u^{(n)}(t_m)` 表示出来。有时还要用到 Lipschiz 条件。

各种迭代格式比较
================

从不同的积分公式可推出不同的格式：

- 左矩形公式：Euler显格式
- 右矩形公式：Euler隐格式
- 梯形公式：梯形格式（只迭代一步：预估校正格式）
- 中矩形公式：中矩形格式
- 泰勒逼近：Runge-Kutta 格式

+-----------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------+------------------------------------------------+
| 格式            | 公式                                                                                                                                                                  | 绝对收敛域                                         | 局部截断误差 :math:`T_{m+1}`                   |
+=================+=======================================================================================================================================================================+====================================================+================================================+
| Euler显格式     | :math:`u^{m+1}=u^m+\tau f(t_m,u^m)`                                                                                                                                   | :math:`|1+\tau\lambda|\le1`                        | :math:`\frac12\tau^2u''(t_m)+O(\tau^3)`        |
+-----------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------+------------------------------------------------+
| Euler隐格式*    | :math:`u^{m+1}=u^m+\tau f(t_{m+1},u^{m+1})`                                                                                                                           | :math:`|1-\tau\lambda|\ge1`                        | :math:`-\frac12\tau^2u''(t_m)+O(\tau^3)`       |
+-----------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------+------------------------------------------------+
| 梯形格式*       | :math:`u^{m+1}=u^m+\frac{\tau}{2}(f(t_m,u^m)+f(t_{m+1},u^{m+1}))`                                                                                                     | :math:`\Re(\tau\lambda)\le0`                       | :math:`-\frac{1}{12}\tau^3u'''(t_m)+O(\tau^4)` |
+-----------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------+------------------------------------------------+
| 预估校正格式    | :math:`\left\{\begin{aligned}\overline u^{m+1} &= u^m +\tau f(t_m,u^m)\\u^{m+1} &= u^m +\frac{1}{2}\tau[f(t_m,u^m)+f(t_{m+1},\overline u^{m+1})]\end{aligned}\right.` | :math:`|1+\tau\lambda+\frac12(\tau\lambda)^2|\le1` | :math:`O(\tau^3)`                              |
+-----------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+                                                    |                                                |
| 二级二阶R-K格式 | :math:`\left\{\begin{aligned}K_1&=f(t_m,u^m)\\K_2&=f(t_m+\tau,u^m+\tau K_1)\\u^{m+1}&=u^m+\frac{\tau}{2}(K_1+K_2)\end{aligned}\right.`                                |                                                    |                                                |
+-----------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------+------------------------------------------------+
| 中矩形格式      | :math:`\left\{\begin{aligned}u^{m+1}&=u^{m-1}+2\tau f(t_m,u^m)\\u^1&=u(0)+\tau f(0,u(0))\end{aligned}\right.`                                                         | :math:`|1+\tau\lambda+\frac12(\tau\lambda)^2|\le1` | :math:`O(\tau^3)`                              |
+-----------------+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------+----------------------------------------------------+------------------------------------------------+

1. 每个迭代公式其实都包括初值条件 :math:`u^0=u(0)`
2. 欧拉隐格式和梯形格式都需要采用迭代法，先使用显格式求出 :math:`u^{m+1,[0]}` ，再迭代，一般不超过 3 次
3. 预估校正格式等价于二级二阶 Runge-Kutta 格式，只是技术路径不同