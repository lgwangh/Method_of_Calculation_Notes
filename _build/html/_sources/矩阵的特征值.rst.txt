============
矩阵的特征值
============

高次方程与特征值
================

n 次代数多项式

.. math::
  p_n(x)=x^n+a_1x^{n-1}+\cdots+a_{n-1}x+a_n

即为上 Hessenberg 矩阵

.. math::
  A=\begin{pmatrix}
  -a_1 & -a_2 & -a_3 & \cdots & -a_n\\
  1 & 0 & 0 & \cdots & 0\\
  & 1 & 0 & \cdots & 0\\
  & & \ddots & \ddots & \vdots\\
  & & & 1 & 0
  \end{pmatrix}

的特征多项式 :math:`|xI-A|=0` 。因而问题转化为求特征值问题。

QR方法
======

QR 变换为倒序相乘： :math:`B=QR,C=RQ` ，则 C 与 B 正交相似，特征值相同。

QR 算法为：

.. math::
  \left\{\begin{aligned}
  A_{k-1}&=Q_{k-1}R_{k-1}\\
  A_k&=R_{k-1}Q_{k-1}
  \end{aligned}\right.

若 A 的特征值满足 :math:`|\lambda_1|>|\lambda_2|>\cdots>|\lambda_n|>0` ，则 QR 算法收敛到上三角矩阵，对角元即为特征值，即

.. math::
  \lim_{k\to\infty}(A_k)_{ij}=\left\{\begin{aligned}
  0,\quad&i>j\\
  \lambda_i,\quad&i=j
  \end{aligned}\right.

进一步，若 A 对称，则收敛到对角矩阵

.. math::
  \lim_{k\to\infty}(A_k)_{ij}=\left\{\begin{aligned}
  0,\quad&i\ne j\\
  \lambda_i,\quad&i=j
  \end{aligned}\right.

QR 算法简单有效，但计算量大，收敛较慢。可以采用先变化为上 Hessenberg 阵再计算的方法减小计算量，以及采用原点平移法加快收敛。

幂法与反幂法
============

若 A 的主特征值严格占优，即 :math:`|\lambda_1|>|\lambda_2|\ge\cdots\ge|\lambda_n|` ，且特征向量 :math:`\pmb v_1,\pmb v_2,\cdots\pmb v_n` 线性无关，则有幂法：

.. math::
  \left\{\begin{aligned}
  \pmb y_k&=A\pmb x_{k-1}\\
  \pmb x_k&=\frac{\pmb y_k}{\|\pmb y_k\|_p}
  \end{aligned}\right.

此处的 p 一般采用二范数。主特征值采用 A 关于 :math:`\pmb x_k` 的 Rayleight 商逼近：

.. math::
  \tau_k=\frac{\pmb x_k^TA\pmb x_k}{\pmb x_k^T\pmb x_k}=\lambda_1+O(|\frac{\lambda_2}{\lambda_1}|^k),\ \lim_{k\to\infty}\tau_k=\lambda_1

A 对称正定时， :math:`\tau_k` 的收敛阶提升到 2k。

若 A 可逆，则 :math:`A^{-1}\pmb v_j=\lambda_j^{-1}\pmb v_j` ，得到反幂法。若 :math:`|\frac1{\lambda_n}|>|\frac1{\lambda_{n-1}}|\ge\cdots\ge|\frac1{\lambda_1}|` ，且特征向量 :math:`\pmb v_1,\pmb v_2,\cdots\pmb v_n` 线性无关，则：

.. math::
  \left\{\begin{aligned}
  A\pmb y_k&=\pmb x_{k-1}\\
  \pmb x_k&=\frac{\pmb y_k}{\|\pmb y_k\|_p}
  \end{aligned}\right.

每步都需要解线性方程组。

对于幂法和反幂法，当所取的初值 :math:`\pmb x_0\perp\pmb v_0` 时，迭代结果会出问题。对于反幂法，可用 **半次初值迭代法** 取初值：做 :math:`A=LU` ，取 :math:`\pmb x_0=L\cdot(1,1,\cdots,1)^T` ，则首次迭代只需解 :math:`U\pmb y=(1,1,\cdots,1)^T` 即可。

原点平移反幂法
==============

已知 :math:`\lambda_k` 的近似值 :math:`\tilde \lambda_k` 满足

.. math::
  |\lambda_k-\tilde \lambda_k|\ll|\lambda_j-\tilde \lambda_k|,\ j\ne k

则令 :math:`B=A-\tilde \lambda_k I` 对其使用反幂法即可得到 :math:`\lambda_k`。

.. note::
  :math:`\tilde \lambda_k` 的计算方法之一：**Gerschgorin 圆盘定理**

  :math:`C\in \mathbb{R}^{n\times n}` 的特征值 :math:`\{\lambda_j\}_{j=1}^n` 都在 n 个圆盘

  .. math::
    |z-c_{ii}|\le r_i=\sum_{j=1}^n|c_{ij}|,\quad i=1,2,\cdots,n,\quad j\ne i

  的并集上。若 C 不可约且有一特征值 :math:`\lambda` 在 n 个圆盘并集的边界上，则这 n 个圆盘的圆周都经过 :math:`\lambda` 。

常用特征值初值估计方法：

1. 用 QR 算法迭代几步，取对角元作为初值
2. 利用圆盘定理，配合一些相似变换，最后得到相互分离的圆盘域，取圆心作为初值。
   
估计能够确定特征值符号的话，可以用下面的方法代替 Rayleight 商：

.. math::
  |\lambda|=\frac{\|A\pmb v\|_p}{\|\pmb v\|_p},\quad p=1,2,\infty