========
数值积分
========

一般求积公式
============

设 :math:`\{x_j\}_{j=0}^n` 是 :math:`[a,b]` 上包含两端点的分划，则一般求积公式为

.. math::
  \int_a^b f(x)\mathrm d x\approx\sum_{j=0}^n A_jf(x_j),\ A_j=\int_a^b l_j(x)\mathrm d x

截断误差

.. math::
  r(f)=\frac{1}{(n+1)!}\int_a^bf^{(n+1)}(\xi)\omega_{n+1}(x)\mathrm d x

定义 **代数精确度**：若 :math:`\forall f\in\mathbb{P}_m`

.. math::
  \int_a^b f(x)\mathrm d x=\sum_{j=0}^n A_jf(x_j),\ \int_a^b x^{m+1}\mathrm d x\ne \sum_{j=0}^n A_jx_j^{m+1}

则该求积公式具有 m 次代数精确度。事实上只需要对泰勒基进行验证即可。 **一般求积公式的代数精确度至少为 n** 。

等距节点求积公式
================

将区间 n 等分，则可得求积系数公式：

.. math::
  A_j=(b-a)C_j^{(n)},\ C_j^{(n)}=\frac{(-1)^{n-j}}{j!(n-j)!n}\int_0^n \prod_{i\ne j}(s-i)\mathrm d s,\ j=0,1,\cdots,n

有以下性质：

1. :math:`\sum_{j=0}^nC_j^{(n)}\equiv 1`
2. :math:`n\le7` 时， :math:`\{C_j^{(n)}\}_{j=0}^n` 恒正，求积公式计算稳定
3. n 为偶数时，求积公式代数精确度为 n+1
   
两种常用求积公式：

+---+-------------+----------------------------------------------------+--------------------------------------------+------------+
| n | 名称        | 公式                                               | 余项估计                                   | 代数精确度 |
+===+=============+====================================================+============================================+============+
| 1 | 梯形公式    | :math:`\frac{b-a}{2}[f(a)+f(b)]`                   | :math:`-\frac{(b-a)^3}{12}f^{(2)}(\eta)`   | 1          |
+---+-------------+----------------------------------------------------+--------------------------------------------+------------+
| 2 | Simpson公式 | :math:`\frac{b-a}{6}[f(a)+4f(\frac{a+b}{2})+f(b)]` | :math:`-\frac{(b-a)^5}{2880}f^{(4)}(\eta)` | 3          |
+---+-------------+----------------------------------------------------+--------------------------------------------+------------+

.. note::
  证明余项估计的步骤：

    1. 根据用到的积分节点，构造次数恰等于求积公式代数精确度的 Hermite 插值（可能退化为 Lagarange 插值）函数
    2. 利用差值函数，写出“积分精确值=求积公式+余项的积分”的形式
    3. 需综合使用最值定理与介值定理，把 f 的导函数从积分号中提出来
    4. 将余项积出来

复化求积公式
============

将空间 n 等分，步长 :math:`h=\frac{b-a}{n}` ，记

.. math::
  \Sigma_1=f(a)+f(b),\ \Sigma_2=\sum_{j=0}^{n-1}f(x_{j+\frac12}),\ \Sigma_3=\sum_{j=1}^{n-1}f(x_j)

则常用格式：

+-----------------+------------------------------------------------------------------------------+--------+
| 名称            | 公式                                                                         | 收敛阶 |
+=================+==============================================================================+========+
| 复化中矩形公式  | :math:`H_n=h\Sigma_2`                                                        | 2      |
+-----------------+------------------------------------------------------------------------------+--------+
| 复化梯形公式    | :math:`T_n=\frac{h}{2}(\Sigma_1+2\Sigma_3),\ T_{2n}=\frac12 T_n+\frac12 H_n` | 2      |
+-----------------+------------------------------------------------------------------------------+--------+
| 复化Simpson公式 | :math:`S_n=\frac13 T_n+\frac23 H_n`                                          | 4      |
+-----------------+------------------------------------------------------------------------------+--------+

Romberg积分
===========

Ricardson外推法：若

.. math::
  F_m(h)=A+a_m^{(m)}h^{n_m}+a_{m+1}^{(m)}h^{n_{m+1}}+\cdots,\ n_m<n_{m+1}<\cdots

则取 :math:`q\in(0,1)` ，令

.. math::
  F_{m+1}(h)=\frac{F_m(qh)-q^{n_m}F_m(h)}{1-q^{n_m}}

可以消除低次项，提高精度。取 :math:`q=\frac12` 即得 Romberg 积分：

.. math::
  F_{m}(h)=\frac{4^mF_{m-1}(\frac h2)-F_{m-1}(h)}{4^m-1}

所以计算过程为：

+---+------------------------------------------------+-------------------------------------------------+-------------------------------------------+---------------------------------------+---+
| k | :math:`H_{2^kn}`                               | :math:`F_0(\frac{h}{2^k})`                      | :math:`F_1(\frac{h}{2^k})`                | :math:`F_2(\frac{h}{2^k})`            | … |
+===+================================================+=================================================+===========================================+=======================================+===+
| 0 | :math:`H_n=h\Sigma_2^{(h)}`                    | :math:`T_n=\frac h 2(\Sigma_1+2\Sigma_3^{(h)})` | :math:`S_n=\frac{4T_{2n}-T_n}{4-1}`       | :math:`C_n=\frac{16S_{2n}-S_n}{16-1}` | … |
+---+------------------------------------------------+-------------------------------------------------+-------------------------------------------+---------------------------------------+---+
| 1 | :math:`H_{2n}=\frac h 2\Sigma_2^{(\frac h 2)}` | :math:`T_{2n}=\frac12(T_n+H_n)`                 | :math:`S_{2n}=\frac{4T_{4n}-T_{2n}}{4-1}` |                                       |   |
+---+------------------------------------------------+-------------------------------------------------+-------------------------------------------+---------------------------------------+---+
| 2 | \                                              | :math:`T_{4n}=\frac12(T_{2n}+H_{2n})`           |                                           |                                       |   |
+---+------------------------------------------------+-------------------------------------------------+-------------------------------------------+---------------------------------------+---+

Gauss求积公式
=============

若求积公式具有 2n+1 次代数精确度，则为 Gauss 求积公式， :math:`\{x_j\}_{j=0}^n` 为 Gauss 点。其充要条件为 :math:`\omega_{n+1}(x)\perp\mathbb{P}_n` 。

则：闭区间 :math:`[a, b]` 上 n+1 次正交多项式的所有零点就是 Gauss 点。若 :math:`[a, b]=[-1,1]` ，Gauss 点就是 n+1 次 Legendre 多项式 :math:`P_{n+1}(x)` 的全部零点。

Gauss 求积公式的性质：

1. 余项估计：

  .. math::
    \frac{f^{(2n+2)}(\eta)}{(2n+2)!}\int_a^b\omega_{n+1}^2(x)\mathrm d x

2. Gauss 求积系数 :math:`\{A_j\}_{j=0}^n` 满足 :math:`\sum_{j=0}^n A_j=b-a`
3. Gauss 求积系数恒正，因而 Gauss 求积公式计算稳定
   
已知 n，要求建立 Gauss-Legendre 求积公式。三步：

1. 求 Gauss 点：解 :math:`P_{n+1}(x)=0`
2. 求求积系数：用公式 :math:`A_j=\int_{-1}^1 l_j(x)\mathrm d x` 或解线性方程组

  .. math::
    \int_{-1}^1 f_i(x)\mathrm d x=\sum_{j=0}^nA_jf_i(x_j),\quad\text{其中}f_i\triangleq x^i, i=0,1,\cdots,n

3. 写出结果

推而广之，有带权的 Gauss 求积公式：

.. math::
  \int_a^b f(x)\omega(x)\mathrm d x\approx\sum_{j=0}^n A_jf(x_j),\ A_j=\int_a^b l_j(x)\omega(x)\mathrm d x

其充要条件同样是在权重下 :math:`\omega_{n+1}(x)\perp\mathbb{P}_n` 。为了建立带权的求积公式，往往需要先求出权重下的正交多项式，一般采用待定系数法。例如设二次正交多项式为 :math:`p_2(x)=x^2+px+q` ，再根据 :math:`p_2(x)\perp\mathbb{P}_1` 解方程求出系数：

.. math::
  0 =(p_2,x^i)_\omega=\int_a^b p_2(x)x^i\omega(x)\mathrm d x,\quad i=0,1

之后使用之前的三步。